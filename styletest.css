  .product-filter {
    display: flex;
  }

  .product-filter h1 {
    flex-grow: 1;
  }

  .sort {
    display: flex;
  }

  .collection-sort {
    display: flex;
    flex-direction: column;
  }

  .products {
    display: flex;
    flex-wrap: wrap;
  }

  .products {
    display: flex;
    flex-wrap: wrap;
  }
  
  .product-card {
    padding: 2%;
    flex-grow: 1;
    flex-basis: 16%;
  
    display: flex; /* so child elements can use flexbox stuff too! */
  }

  .product-image img {
    max-width: 100%;
  }

  .product-info {
    margin-top: auto;
    flex-wrap: wrap;
  }

  @media (max-width: 920px) {
    .product-card {
      flex: 1 21%;
    }
  }

   /* if we would prefer to have larger images of the products at the top versus the bottom to better highlight the products. */
    /* Select the first two */
    .products .product-card:first-child, 
    .products .product-card:nth-child(2) {
    flex: 2 46%;
    }

    @media (max-width: 600px) {
        .product-card {
          flex: 2 56%;
        }
      }
    
    /* With the following code, we can easily change this with a media query so that our content is set vertically: */
    @media (max-width: 480px) {
        .product-filter {
            flex-direction: column;
        }
        .sort {
            align-self: flex-start;
            }
        }
    
